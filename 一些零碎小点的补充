retuen语句的作用通常会中断代码的读取使得后面的代码没办法读取
在C语言中，return 语句用于终止函数的执行，并将控制权返回给调用者。
在 main 函数中，return 语句还会将一个整数值返回给操作系统，以指示程序的退出状态。

return 0;：通常表示程序成功完成。
return 非0;：通常表示程序遇到了某种错误或异常情况
return 1;：表示一般性错误
////////////////////////////////////////////


while (1) {
	printf("请输入要计算的项数 n: ");
	if (scanf("%d", &n) != 1 || n <= 0) {
		printf("输入无效，请输入一个正整数。\n");
		// 清除输入缓冲区
		while (getchar() != '\n'); // 读取并丢弃所有字符，直到换行符
	}
	else {
		break; // 有效输入，退出循环
	}
}
之前前的代码在第一次输入无效时要求重新输入，但只检查了一次。
如果用户第二次输入仍然无效，程序将继续执行并可能出现错误。
可以使用循环，直到用户输入有效的值

/////////////////////////////////
/////////////////////////////////
//while 语句 基本语法
//while (条件) {
	// 循环体：在条件为真时重复执行的代码
//}
/* 无限循环，需要手动终止
#include <stdio.h>

int main() {
	int count = 0;

	while (1) { // 永远为真的条件
		printf("这是一个无限循环，循环次数：%d\n", count);
		count++;

		if (count >= 10) { // 当计数达到10时，退出循环
			break;
		}
	}

	printf("循环结束。\n");

	return 0;
}  */
